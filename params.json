{
  "name": "Gdwebviewcontroller",
  "tagline": "WKWebview browser view controller in Swift",
  "body": "GDWebViewController v1.3\r\n===================\r\n\r\nA simple view controller for navigating web pages using WKWebView. iOS 8.1+.\r\n\r\nSupports Swift 2.0 and iOS 9 SDK.\r\nFor Swift 1.2 support go [here](https://github.com/coffellas-cto/GDWebViewController/releases/tag/v1.0)\r\n\r\n![App Screenshots](https://cloud.githubusercontent.com/assets/3193877/7665617/29a8672a-fbc9-11e4-98cf-41fec0f6c403.gif)\r\n\r\n## Description\r\n- A browser-like view controller to support web pages navigation in your Swift app.\r\n- Supports back-forward navigation and page refresh action.\r\n- Supports back-forward swipe gestures.\r\n- Has built-in activity indicators (both progress view and activity indicator).\r\n\r\n## Installation\r\nJust grab two files `GDWebViewController.swift` and `GDWebViewNavigationToolbar.swift` into your project.<br />\r\nYou can download `GDWebBrowserClient` project as well to see how it can be used.\r\n\r\n## GDWebViewController Interface\r\n####Properties\r\n```swift\r\nweak var delegate: GDWebViewControllerDelegate?\r\n```\r\nAn object to serve as a delegate which conforms to GDWebViewNavigationToolbarDelegate protocol.\r\n\r\n```swift\r\nvar progressIndicatorStyle: GDWebViewControllerProgressIndicatorStyle = .Both\r\n```\r\nThe style of progress indication visualization. Can be one of four values: .ActivityIndicator, .ProgressView, .Both, .None\r\n\r\n```swift\r\nvar allowsBackForwardNavigationGestures: Bool\r\n```\r\nA Boolean value indicating whether horizontal swipe gestures will trigger back-forward list navigations. The default value is false.\r\n\r\n```swift\r\nvar showsToolbar: Bool\r\n```\r\nA boolean value if set to true shows the toolbar; otherwise, hides it.\r\n\r\n```swift\r\nvar showsStopRefreshControl: Bool\r\n```\r\nA boolean value if set to true shows the refresh control (or stop control while loading) on the toolbar; otherwise, hides it.\r\n\r\n```swift\r\nvar toolbar: GDWebViewNavigationToolbar\r\n```\r\nThe navigation toolbar object (read-only).\r\n\r\n```swift\r\nvar allowJavaScriptAlerts: Bool\r\n```\r\nBoolean flag which indicates whether JavaScript alerts are allowed. Default is `true`.\r\n    \r\n####Methods\r\n```swift\r\nfunc loadURLWithString(URLString: String)\r\n```\r\nNavigates to an URL created from provided string.\r\n\r\n```swift\r\nfunc loadURL(URL: NSURL, cachePolicy: NSURLRequestCachePolicy = .UseProtocolCachePolicy, timeoutInterval: NSTimeInterval = 0)\r\n```\r\nNavigates to the URL.\r\n\r\n```swift\r\nfunc showsToolbar(show: Bool, animated: Bool)\r\n```\r\nShows or hides toolbar.\r\n\r\n```swift\r\nfunc evaluateJavaScript(javaScriptString: String, completionHandler: ((AnyObject?, NSError?) -> Void)?)\r\n```\r\nEvaluates the given JavaScript string.\r\n\r\n####GDWebViewControllerDelegate Methods\r\n```swift\r\n@objc protocol GDWebViewControllerDelegate {\r\n    optional func webViewController(webViewController: GDWebViewController, didChangeURL newURL: NSURL?)\r\n    optional func webViewController(webViewController: GDWebViewController, didChangeTitle newTitle: NSString?)\r\n    optional func webViewController(webViewController: GDWebViewController, didFinishLoading loadedURL: NSURL?)\r\n    optional func webViewController(webViewController: GDWebViewController, decidePolicyForNavigationAction navigationAction: WKNavigationAction, decisionHandler: (WKNavigationActionPolicy) -> Void)\r\n    optional func webViewController(webViewController: GDWebViewController, decidePolicyForNavigationResponse navigationResponse: WKNavigationResponse, decisionHandler: (WKNavigationResponsePolicy) -> Void)\r\n    optional func webViewController(webViewController: GDWebViewController, didReceiveAuthenticationChallenge challenge: NSURLAuthenticationChallenge, completionHandler: (NSURLSessionAuthChallengeDisposition, NSURLCredential!) -> Void)\r\n}\r\n```\r\n\r\nNotice:<br />\r\nYou must do `import WebKit` if you use last three methods from `GDWebViewControllerDelegate` description.\r\n\r\n## GDWebViewNavigationToolbar Interface\r\n####Properties\r\n```swift\r\nvar toolbarTintColor: UIColor?\r\n```\r\nThe tint color to apply to the toolbar button items.\r\n\r\n```swift\r\nvar toolbarBackgroundColor: UIColor?\r\n```\r\nThe toolbar's background color.\r\n\r\n```swift\r\nvar toolbarTranslucent: Bool\r\n```\r\nA Boolean value that indicates whether the toolbar is translucent (true) or not (false).\r\n\r\n## License\r\nPublished under MIT license. If you have any feature requests, please create an issue. Smart pull requests are also welcome.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}